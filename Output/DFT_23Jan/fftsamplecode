// Example program
#include <iostream>
#include <string>
#include <cmath>
#include <vector>
#include <complex>

using namespace std;


vector<complex<double> > computeDft(const vector<complex<double> > &input) {
	vector<complex<double> > output;
	size_t n = input.size();
	for (size_t k = 0; k < n; k++) {  // For each output element
		complex<double> sum(0.0, 0.0);
		for (size_t t = 0; t < n; t++) {  // For each input element
			double angle = 2 * M_PI * t * k / n;
			sum += input[t] * exp(-angle);
		}
		output.push_back(sum);
	}
	return output;
}

void computeDft(const vector<double> &inreal, const vector<double> &inimag,
		vector<double> &outreal, vector<double> &outimag) {
	
	size_t n = inreal.size();
	for (size_t k = 0; k < n; k++) {  // For each output element
		double sumreal = 0;
		double sumimag = 0;
		for (size_t t = 0; t < n; t++) {  // For each input element
			double angle = 2 * M_PI * t * k / n;
			sumreal +=  inreal[t] * cos(angle) + inimag[t] * sin(angle);
			sumimag += -inreal[t] * sin(angle) + inimag[t] * cos(angle);
		}
		outreal[k] = sumreal;
		outimag[k] = sumimag;
	}
}

int main()
{
  std::string name;
  std::cout << "What is your name? ";
  
  vector<complex<double>> fftInput = { 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0 };
  vector<double> inputReal = { 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0 };
  vector<double> inputImag = { 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0 };
  
  cout << "" << endl;
  
  for(int i = 0; i < fftInput.size(); i++)
  {
    // cout << fftInput.at(i).real() << " " << fftInput.at(i).imag() << endl;
    cout << fftInput.at(i) << endl;
  }
  
  cout << "" << endl;
  cout << "" << endl;
  
  vector<complex<double>> fftOutput = computeDft(fftInput);
  
  for(int i = 0; i < fftOutput.size(); i++)
  {
    // cout << fftOutput.at(i).real() << " " << fftOutput.at(i).imag() << endl;
    cout << fftOutput.at(i) << endl;
  }
  
  std::cout << "Hello, " << name << "!\n";
}

